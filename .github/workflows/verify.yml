name: Verify
on:
  workflow_call:
    inputs:
      brakeman:
        type: boolean
      bundler-audit:
        type: boolean
      node-version:
        type: string
        default: "16"
      rspec:
        type: boolean
      rubocop:
        type: boolean
      run-before-tests:
        type: string
      run-before-linters:
        type: string

jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    env:
      BUNDLE_WITHOUT: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up Node and install packages
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "yarn"
      - run: |
          yarn install --pure-lockfile

      - name: Run linters - RuboCop
        if: ${{ inputs.rubocop == true }}
        run: |
          ${{ inputs.run-before-linters }}
          bundle exec rubocop --parallel
      - name: Run security checks - brakeman
        if: ${{ inputs.brakeman == true }}
        run: |
          bundle exec brakeman -q -w2
      - name: Run security checks - bundler-audit
        if: ${{ inputs.bundler-audit == true }}
        run: |
          bundle exec bundler-audit --update

  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      BUNDLE_WITHOUT: development
      PGHOST: localhost
      PGUSER: postgres
      PGPASSWORD: postgres
      RAILS_ENV: test
    services:
      postgres:
        image: postgres:14
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up Node and install packages
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
          cache: "yarn"
      - run: |
          yarn install --pure-lockfile

      - name: Set up test database
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          RAILS_ENV: test
        run: |
          ${{ inputs.run-before-tests }}
          bundle exec rails db:setup

      - name: Run tests (RSpec)
        if: ${{ inputs.rspec == true }}
        run: |
          bundle exec rspec

      - name: Run tests
        if: ${{ inputs.rspec != true }}
        run: |
          bundle exec rails test
